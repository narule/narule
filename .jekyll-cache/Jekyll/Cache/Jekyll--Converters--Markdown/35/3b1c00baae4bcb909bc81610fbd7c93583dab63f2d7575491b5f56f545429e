I"a!<h1 id="shell">shell</h1>

<p>shell 是一种脚本命令</p>

<blockquote>
  <p>Shell 脚本（shell script），是一种为 shell 编写的脚本程序。’</p>
</blockquote>

<h3 id="写一个shell-脚本">写一个shell 脚本</h3>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#!/bin/bash </span>
<span class="nb">echo</span> <span class="s2">"Hello World !"</span>
</code></pre></div></div>

<p><strong>#!</strong> 是一个约定的标记，它告诉系统这个脚本需要什么解释器来执行，即使用哪一种 Shell。</p>

<p>echo 命令用于向窗口输出文本。</p>

<h3 id="运行shell-脚本的方法">运行shell 脚本的方法</h3>

<h4 id="1-是脚本文件成为可执行文件">1 是脚本文件成为可执行文件</h4>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">chmod</span> +x ./test.sh  <span class="c">#使脚本具有执行权限</span>
./test.sh  <span class="c">#执行脚本</span>
</code></pre></div></div>

<h4 id="2-作为解释器参数">2 作为解释器参数</h4>

<p>这种运行方式是，直接运行解释器，其参数就是 shell 脚本的文件名，如：</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/bin/sh test.sh
</code></pre></div></div>

<p>这种方法，脚本中不需要写<code class="language-plaintext highlighter-rouge">#!/bin/bash </code>  因为 /bin/sh 就是解释器，#!/bin/bash 就是同样的意思，告诉系统用/bin/sh 做运行解释器，只有在第一种方式，脚本文件第一行加入这个才有效。</p>

<h3 id="shell变量定义">shell变量定义</h3>

<p>注意，变量名和等号之间不能有空格，这可能和你熟悉的所有编程语言都不一样。同时，变量名的命名须遵循如下规则：</p>

<ul>
  <li>命名只能使用英文字母，数字和下划线，首个字符不能以数字开头。</li>
  <li>中间不能有空格，可以使用下划线（_）。</li>
  <li>不能使用标点符号。</li>
  <li>不能使用bash里的关键字（可用help命令查看保留关键字）。</li>
</ul>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#! /bin/bash</span>
<span class="nv">blog_name</span><span class="o">=</span><span class="s2">"wunanyu"</span>
<span class="nb">echo</span> <span class="nv">$blog_name</span> <span class="c">#输出变量值</span>
<span class="nb">echo</span> <span class="s2">"</span><span class="k">${</span><span class="nv">blog_name</span><span class="k">}</span><span class="s2">simple"</span> <span class="c">#输出变量值</span>
</code></pre></div></div>

<h4 id="只读变量">只读变量</h4>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#! /bin/bash</span>
<span class="nv">blog_name</span><span class="o">=</span><span class="s2">"wunanyu"</span>
<span class="nb">echo</span> <span class="nv">$blog_name</span> <span class="c">#输出变量值</span>
<span class="nb">echo</span> <span class="s2">"</span><span class="k">${</span><span class="nv">blog_name</span><span class="k">}</span><span class="s2">simple"</span> <span class="c">#输出变量值</span>
<span class="nb">readonly </span>bolg_name
<span class="nv">blog_name</span><span class="o">=</span><span class="s2">"sj"</span>
<span class="nb">echo</span> <span class="nv">$blog_name</span>
</code></pre></div></div>

<h4 id="语句结构">语句结构</h4>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if </span>condition <span class="c">#条件</span>
<span class="k">then 
	</span><span class="nb">command</span> <span class="c">#执行命令</span>
<span class="k">elif </span>otherCondition <span class="c">#条件</span>
<span class="k">then
	</span><span class="nb">command</span> <span class="c">#执行命令</span>
<span class="k">else
	</span><span class="nb">command
</span><span class="k">fi</span>
</code></pre></div></div>

<h2 id="编写shell脚本运行java程序">编写shell脚本运行java程序</h2>

<p>要求：能够启动和关闭java程序</p>

<h3 id="流程设计">流程设计</h3>

<p>设置java程序名称</p>

<p>有 java运行的 pid</p>

<p>start -&gt; 是否在运行？ 没有就启动 有就输出已经在运行</p>

<p>stop -&gt; 是否已经停止 没有就停止 有就输出程序已经停止</p>

<p>如果 java程序的jar包名为：Config-0.0.1-SNAPSHOT.jar</p>

<h4 id="启动命令">启动命令</h4>

<p><code class="language-plaintext highlighter-rouge">nohup java -jar Config-0.0.1-SNAPSHOT.jar &gt; config.log 2&gt;&amp;1 &amp;</code></p>

<p>后台启动，并且将日志打印打 config.log</p>

<h4 id="关闭命令">关闭命令</h4>

<p>获取进程id,柔和关闭java程序  kill -9 强制关闭</p>

<p>pid=<code class="language-plaintext highlighter-rouge">ps -ef | grep ${application} | grep -v grep |awk '{print $2}'</code></p>

<p>kill -15 pid</p>

<h3 id="脚本">脚本</h3>

<p><code class="language-plaintext highlighter-rouge">vim Config.sh</code></p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c">#!/bin/bash</span>
<span class="nb">echo</span> <span class="nv">$1</span> <span class="c">#输出命令</span>

<span class="c"># 1.首先定义需要用到的变量</span>
<span class="nv">application</span><span class="o">=</span>Config-0.0.1-SNAPSHOT.jar <span class="c">#1.1java程序应用名</span>
<span class="c">#PID=`cat config-pid`</span>
<span class="nv">PID</span><span class="o">=</span><span class="sb">`</span>ps <span class="nt">-ef</span> | <span class="nb">grep</span> <span class="k">${</span><span class="nv">application</span><span class="k">}</span> | <span class="nb">grep</span> <span class="nt">-v</span> <span class="nb">grep</span> |awk <span class="s1">'{print $2}'</span><span class="sb">`</span> <span class="c">#获取1.2pid</span>

<span class="c"># 2.判断输入命令 执行对应的动作</span>
<span class="k">if</span> <span class="o">[[</span> <span class="nv">$1</span> <span class="o">==</span> <span class="s2">"start"</span> <span class="o">]]</span>  <span class="c">#2.1启动脚本</span>
<span class="k">then
        if</span> <span class="o">[[</span> <span class="nt">-z</span> <span class="s2">"</span><span class="nv">$PID</span><span class="s2">"</span> <span class="o">]]</span> <span class="c">#如果pid 长度为0 表示程序没有启动</span>
        <span class="k">then
                </span><span class="nb">nohup </span>java <span class="nt">-jar</span> Config-0.0.1-SNAPSHOT.jar <span class="o">&gt;</span> config.log 2&gt;&amp;1 &amp;
        <span class="k">else</span> <span class="c"># pid存在，说明程序已经启动，输出提示</span>
                <span class="nb">echo</span> <span class="s2">"</span><span class="k">${</span><span class="nv">application</span><span class="k">}</span><span class="s2"> is already running"</span>
        <span class="k">fi
elif</span> <span class="o">[[</span> <span class="nv">$1</span> <span class="o">==</span> <span class="s2">"stop"</span> <span class="o">]]</span> <span class="c">#2.2关闭脚本</span>
<span class="k">then
        if</span> <span class="o">[[</span> <span class="nt">-n</span> <span class="s2">"</span><span class="nv">$PID</span><span class="s2">"</span> <span class="o">]]</span> <span class="c">#如果pid不为空值，说明程序在运行</span>
        <span class="k">then
                </span><span class="nb">kill</span> <span class="nt">-15</span> <span class="nv">$PID</span> <span class="c"># kill -9 强制关闭  -15柔和关闭</span>
                <span class="c">#&gt; config-pid # clean pid</span>
        <span class="k">else
                </span><span class="nb">echo</span> <span class="s2">"</span><span class="k">${</span><span class="nv">application</span><span class="k">}</span><span class="s2"> is not running"</span>
        <span class="k">fi
else</span> <span class="c"># 其他命令 没有对应动作</span>
        <span class="nb">echo</span> <span class="s1">'no this commond'</span>

<span class="k">fi</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">chmod + x Config.sh</code>  #修改文件权限，成为可执行文件</p>

:ET