<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://narule.github.io</id><title>Narule</title><subtitle>A minimal, portfolio, sidebar, bootstrap Jekyll theme with responsive web design and focuses on text presentation.</subtitle> <updated>2022-06-29T21:43:02+08:00</updated> <author> <name>Narule</name> <uri>https://narule.github.io</uri> </author><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="https://narule.github.io" rel="alternate" type="text/html" /> <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator> <rights> © 2022 Narule </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>用户指纹</title><link href="https://narule.github.io/posts/%E7%94%A8%E6%88%B7%E6%8C%87%E7%BA%B9/" rel="alternate" type="text/html" title="用户指纹" /><published>2022-06-29T21:31:00+08:00</published> <updated>2022-06-29T21:42:39+08:00</updated> <id>https://narule.github.io/posts/%E7%94%A8%E6%88%B7%E6%8C%87%E7%BA%B9/</id> <content src="https://narule.github.io/posts/%E7%94%A8%E6%88%B7%E6%8C%87%E7%BA%B9/" /> <author> <name>Narule</name> </author> <category term="Technology^技术" /> <category term="Website^网站" /> <summary> 用户指纹 用户 （灵识）user 设计上来说 用户是独一无二的，用户在创建时不会有第二次创建 灵魂标记账号 在考虑用户的个性化和安全上，账号应该是独一无二的，这种账号应该是只有本人才能登陆的账号。 构思上来说，灵魂时独一无二的，所以电脑也不能把一个独一无二的灵魂保存到数据库，但是我们可以录入灵魂指纹。就像人的指纹时独一无二的一样，灵魂指纹也是如此且更抽象。 </summary> </entry> <entry><title>gitlab使用docker安装</title><link href="https://narule.github.io/posts/gitlab%E4%BD%BF%E7%94%A8docker%E5%AE%89%E8%A3%85/" rel="alternate" type="text/html" title="gitlab使用docker安装" /><published>2022-01-21T18:00:00+08:00</published> <updated>2022-01-21T18:00:00+08:00</updated> <id>https://narule.github.io/posts/gitlab%E4%BD%BF%E7%94%A8docker%E5%AE%89%E8%A3%85/</id> <content src="https://narule.github.io/posts/gitlab%E4%BD%BF%E7%94%A8docker%E5%AE%89%E8%A3%85/" /> <author> <name>Narule</name> </author> <category term="Technology^技术" /> <category term="Tools&amp;Programs^程序工具" /> <summary> gitlab 使用docker安装 环境 centos7 内存最低不小于4G 安装docker 前文 清理 卸载之前的docker环境 yum remove docker \ docker-client \ docker-client-latest \ docker-common \ docker-latest \ docker-latest-logrotate \ docker-logrotate \ docker-engine 安装工具包设置存储库 yum install -... </summary> </entry> <entry><title>Java-jvm调优文档摘要</title><link href="https://narule.github.io/posts/Java-jvm%E8%B0%83%E4%BC%98%E6%96%87%E6%A1%A3%E6%91%98%E8%A6%81/" rel="alternate" type="text/html" title="Java-jvm调优文档摘要" /><published>2021-09-26T00:10:00+08:00</published> <updated>2021-09-26T00:10:00+08:00</updated> <id>https://narule.github.io/posts/Java-jvm%E8%B0%83%E4%BC%98%E6%96%87%E6%A1%A3%E6%91%98%E8%A6%81/</id> <content src="https://narule.github.io/posts/Java-jvm%E8%B0%83%E4%BC%98%E6%96%87%E6%A1%A3%E6%91%98%E8%A6%81/" /> <author> <name>Narule</name> </author> <category term="Technology^技术" /> <category term="Java" /> <summary> Java-jvm调优文档摘要 官方文档：https://docs.oracle.com/en/java/javase/16/gctuning/factors-affecting-garbage-collection-performance.html 关于官方文档的理解，jdk版本不同参数略有区别，特别是jdk1.8之后的改动，取消了永久代这个区域，1.8没有ZGC垃圾回收器，但jdk16的jvm中有ZGC垃圾收集器。 jvm为什么需要调优？ 合理高效的使用两个关键硬件资源：CPU、内存。 JVM(Java Virtual Machine) Java虚拟机是指运行Java程序的虚拟系统，一般运行在linux、windows系统之上，使用有限的cpu，内存。 比如web应用在每次收到请求时，都会有一个线程去处理这个请求，这个过程至少会有业务对象被创建，这些对象会占用... </summary> </entry> <entry><title>关于netty</title><link href="https://narule.github.io/posts/%E5%85%B3%E4%BA%8Enetty/" rel="alternate" type="text/html" title="关于netty" /><published>2021-07-11T00:20:00+08:00</published> <updated>2021-07-12T00:24:17+08:00</updated> <id>https://narule.github.io/posts/%E5%85%B3%E4%BA%8Enetty/</id> <content src="https://narule.github.io/posts/%E5%85%B3%E4%BA%8Enetty/" /> <author> <name>Narule</name> </author> <category term="Technology^技术" /> <category term="Java" /> <summary> 关于netty netty 是一个非阻塞IO框架，用于Java网络应用开发，特点是异步处理，并发处理能力，netty里面包含有reactor框架的实现，是一个非常高级的框架体系。 netty特性 netty 处理快，更少的资源需求，响应快，可以作为高并发场景服务器的一个选择 reactor 个人理解是 react：响应式， or ：对象，就是响应式框架，netty 就是运用reactor 的核心设计思想编写的高性能高并发网络请求处理器框架。 以下来自维基百科，自由的百科全书 跳到导航跳到搜索 注意：本条目主题可能尚无中文译名，因而使用原文或其拉丁字母转写作为标题。如果您在可靠来源中找到本主题的中文名称，请勇于将其移动至中文标题。（2019年2月）   开发者 Netty... </summary> </entry> <entry><title>基于随机定位的地图信息获取方式</title><link href="https://narule.github.io/posts/%E5%9F%BA%E4%BA%8E%E9%9A%8F%E6%9C%BA%E5%AE%9A%E4%BD%8D%E7%9A%84%E5%9C%B0%E5%9B%BE%E4%BF%A1%E6%81%AF%E8%8E%B7%E5%8F%96%E7%AE%97%E6%B3%95/" rel="alternate" type="text/html" title="基于随机定位的地图信息获取方式" /><published>2021-06-13T07:29:00+08:00</published> <updated>2021-06-13T07:29:00+08:00</updated> <id>https://narule.github.io/posts/%E5%9F%BA%E4%BA%8E%E9%9A%8F%E6%9C%BA%E5%AE%9A%E4%BD%8D%E7%9A%84%E5%9C%B0%E5%9B%BE%E4%BF%A1%E6%81%AF%E8%8E%B7%E5%8F%96%E7%AE%97%E6%B3%95/</id> <content src="https://narule.github.io/posts/%E5%9F%BA%E4%BA%8E%E9%9A%8F%E6%9C%BA%E5%AE%9A%E4%BD%8D%E7%9A%84%E5%9C%B0%E5%9B%BE%E4%BF%A1%E6%81%AF%E8%8E%B7%E5%8F%96%E7%AE%97%E6%B3%95/" /> <author> <name>Narule</name> </author> <category term="Technology^技术" /> <category term="Algorithm^算法" /> <summary> 基于随机定位的地图信息获取方式 基本定义 场景 一个应用要用到地图，地图拖动时，要填补新的版图上的地理信息 目的 快速获取屏幕内需要的地图信息，不获取多余无用的地图信息 功能要点 1.确定地图范围，获取的信息不超出显示屏过多 （比如屏幕地图查询100平方米的信息，服务返回的信息不能超过130平米的地图信息） 2.动态快速获取信息，通过定位快速获取周围地理信息，第一时间从缓存获取或者数据库获取，且不要有复杂查询和大量查询。 绝对定位：坐标，传人任何一个点，都能通过角色定位知道这个点在哪，以及其他延伸计算 通过地图的中心定位，优先快速确定要获取那些位置的地理信息，快速获取对应的图块。 3.根据维度调整信息获取范围和格式 粒度：通过两个点确定查询信息的范围，同时确定粒度（地图缩放级别） （4）.原先有的信息短时间不重复获取 （拖动地图导致50%地图位置换了，还... </summary> </entry> </feed>
